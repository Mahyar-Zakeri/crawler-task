services:
  worker:
    build: .
    container_name: crawler-worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_HOST: postgres
      POSTGRES_DB: crawlerdb
      POSTGRES_USER: crawleruser
      POSTGRES_PASSWORD: crawlerpass
      POSTGRES_PORT: 5432
    ports:
      - "18000:8000"
      - "18001:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: on-failure

  redis:
    image: redis:7-alpine
    container_name: crawler-redis
    ports:
      - "6379:6379"


  postgres:
    image: postgres:15-alpine
    container_name: crawler-postgres
    environment:
      POSTGRES_DB: crawlerdb
      POSTGRES_USER: crawleruser
      POSTGRES_PASSWORD: crawlerpass
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "crawleruser"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: crawler-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "19090:9090"
    depends_on:
      - worker

volumes:
  db_data:
